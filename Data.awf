`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Algebraic Tree[T : Star](Empty_Tree, Construct_Tree T (Tree T) (Tree T))
Instance Functor{Tree}(
  Fmap f x = Match x {Empty_Tree -> Empty_Tree, Construct_Tree y z a -> Construct_Tree (f y) (Fmap f z) (Fmap f a)})
Instance Ord{Tree T}<Ord T>(
  Compare x y =
    Match x {
      Empty_Tree -> Match y {Empty_Tree -> EQ, Construct_Tree _ _ _ -> LT},
      Construct_Tree z a b ->
        Match y {Empty_Tree -> GT, Construct_Tree c d e -> Compare (Pair z (Pair a b)) (Pair c (Pair d e))}})
Instance Writeable{Tree T}<Writeable T>(
  Write_Brackets x =
    Match x {
      Empty_Tree -> Pair (List ("E", "m", "p", "t", "y", "_", "T", "r", "e", "e")) False,
      Construct_Tree y z a ->
        Pair
          (Write'
            (List ("C", "o", "n", "s", "t", "r", "u", "c", "t", "_", "T", "r", "e", "e"))
            (List (Brackets y, Brackets z, Brackets a)))
          True})
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````