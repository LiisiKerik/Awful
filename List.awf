Load Standard.awf
Algebraic List[T : Star](Empty_List, Construct_List T (List T))
Instance Applicative{List}(
  Apply x y = Match x {Empty_List -> Empty_List, Construct_List f z -> Cat (Fmap f y) (Apply z y)},
  Return x = Construct_List x Empty_List)
Def Cat[T : Star](x : List T, y : List T) : List T = Match x {Empty_List -> y, Construct_List z a -> Construct_List z (Cat a y)}
Instance Functor{List}(Fmap f x = Match x {Empty_List -> Empty_List, Construct_List y z -> Construct_List (f y) (Fmap f z)})
Instance Monad{List}(Bind x f = Match x {Empty_List -> Empty_List, Construct_List y z -> Cat (f y) (Bind z f)})