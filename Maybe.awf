Load Finite.awf
Load List.awf
Load Standard.awf
Instance Applicative{Maybe}(Apply x y = Match x {Nothing -> Nothing, Wrap f -> Fmap f y}, Return = Wrap)
Instance Container{Maybe}(
  Empty = Nothing,
  Filter f x = Match x {Nothing -> Nothing, Wrap y -> Match f y {False -> Nothing, True -> x}})
Instance Finite{Maybe T}<Finite T>(All = Construct_List Nothing (Fmap Wrap All))
Instance Functor{Maybe}(Fmap f x = Match x {Nothing -> Nothing, Wrap y -> Wrap (f y)})
Instance Monad{Maybe}(Bind x f = Match x {Nothing -> Nothing, Wrap y -> f y})
Instance Ord{Maybe T}<Ord T>(
  Compare x y =
    Match x {Nothing -> Match y {Nothing -> EQ, Wrap -> LT}, Wrap z -> Match y {Nothing -> GT, Wrap w -> Compare z w}})